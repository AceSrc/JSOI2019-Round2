ret = [["测试点","$\sum_{i=1}^m k_i$", "$m$","$k_i$", "树形态限制"]]
def abs(x):
	return x if x > 0 else -x

for datum in prob['args']:	#引用conf.json/yaml中的变量

    rt = ""
    if int(datum['k'] == 0): 
        rt = "无限制"
    elif int(datum['k'] < 0): 
        rt = "$\eq %s$" % (-int(datum['k']))
    else: 
        rt= "$\le %s$" % (int(datum['k']))

    row = [
		','.join(map(str, datum['cases'])),	
		(r"$\le %s$" if int(datum['n']) > 0 else "$\eq %s" ) % tl.hn(abs(datum['n'])),
		(r"$\le %s$" if int(datum['m']) > 0 else "$\eq %s" ) % tl.hn(abs(datum['m'])),
        rt,
		(r"每棵树都是链" if (datum.get('is_line', False)) else "无限制"),
	]
    ret.append(row)	#这是python数组的push_back

base.log.debug(u'输出调试信息')	#渲染题面时会在控制台输出需要调试的信息，不需要可以删除
return merge_ver(ret)	#这个函数可以把竖直方向上相同的格子合并
